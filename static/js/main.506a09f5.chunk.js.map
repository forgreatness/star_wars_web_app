{"version":3,"sources":["App.js","index.js"],"names":["Home","id","People","useRouteMatch","url","peopleLinks","path","peopleRoutesMatcher","Object","keys","PeopleData","person","push","key","to","name","Person","info","Fragment","class","exact","props","filmsPresent","films","forEach","film","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","Planets","planetLinks","planetRoutesMatcher","PlanetsData","planet","Planet","planetResidents","residents","resident","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","Films","filmLinks","filmRoutesMatcher","FilmsData","title","Film","people","planets","characters","character","episode_id","opening_crawl","director","producer","release_date","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.506a09f5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  Redirect,\r\n  useParams,\r\n  useRouteMatch\r\n} from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport PeopleData from './data/people.json';\r\nimport PlanetsData from './data/planets.json';\r\nimport FilmsData from './data/films.json';\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div id=\"home-content\">\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction People() {\r\n  const { url, path } = useRouteMatch();\r\n  const peopleLinks = [];\r\n  const peopleRoutesMatcher = [];\r\n\r\n  for (var person of Object.keys(PeopleData)) {\r\n    peopleLinks.push(\r\n      <li key={person}>\r\n        <NavLink to={PeopleData[person].url}>{PeopleData[person].name}</NavLink>\r\n      </li>\r\n    );\r\n\r\n    peopleRoutesMatcher.push(\r\n      <Route path={PeopleData[person].url}>\r\n        <Person info={PeopleData[person]}/>\r\n      </Route>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"sidenav\">\r\n        <ul>\r\n          {peopleLinks}\r\n        </ul>\r\n      </div>\r\n      <div class=\"main\">\r\n        <Switch>\r\n          {[\r\n            ...peopleRoutesMatcher,\r\n            <Route exact path={url}>\r\n              <p>Select one of the character on the side navigation to learn more about their background.</p>\r\n            </Route>,\r\n            <Route path=\"*\">\r\n              <div>404 - Page Not Found</div>\r\n            </Route>\r\n          ]}\r\n        </Switch>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction Person(props) {\r\n  const person = props.info;\r\n  const filmsPresent = [];\r\n\r\n  person.films.forEach(film => {\r\n    filmsPresent.push(\r\n      <li><Link to={film}>{film}</Link></li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>{person.name}</h2>\r\n      <span><b>Height: </b>{person.height}</span> <br />\r\n      <span><b>Mass: </b>{person.mass}</span> <br />\r\n      <span><b>Hair Color: </b>{person.hair_color}</span> <br />\r\n      <span><b>Skin Color: </b>{person.skin_color}</span> <br />\r\n      <span><b>Eye Color:  </b>{person.eye_color}</span> <br />\r\n      <span><b>Birth Year: </b>{person.birth_year}</span> <br />\r\n      <span><b>Gender: </b>{person.gender}</span> <br />\r\n      <span><b>Home World: </b><Link to={person.homeworld}>{person.homeworld}</Link></span> <br />\r\n      <b>Films:</b>\r\n      <ul>\r\n        {filmsPresent}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nfunction Planets() {\r\n  const { url, path } = useRouteMatch();\r\n  const planetLinks = [];\r\n  const planetRoutesMatcher = [];\r\n\r\n  for (var planet of Object.keys(PlanetsData)) {\r\n    planetLinks.push(\r\n      <li key={planet}>\r\n        <NavLink to={PlanetsData[planet].url}>{PlanetsData[planet].name}</NavLink>\r\n      </li>\r\n    )\r\n\r\n    planetRoutesMatcher.push(\r\n      <Route path={PlanetsData[planet].url}>\r\n        <Planet info={PlanetsData[planet]} />\r\n      </Route>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"sidenav\">\r\n        <ul>\r\n          {planetLinks}\r\n        </ul>\r\n      </div>\r\n      <div class=\"main\">\r\n        <Switch>\r\n          {\r\n            [\r\n              ...planetRoutesMatcher,\r\n              <Route exact path={url}>\r\n                <p>Select a planet from the side navigation to explore its location.</p>\r\n              </Route>,\r\n              <Route path=\"*\">\r\n                <div>\r\n                  404 - Page Not Found\r\n                </div>\r\n              </Route>\r\n            ]\r\n          }\r\n        </Switch>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction Planet(props) {\r\n  const planet = props.info;\r\n  const planetResidents = [];\r\n  const filmsPresent = [];\r\n\r\n  planet.residents.forEach(resident => {\r\n    planetResidents.push(\r\n      <li>\r\n        <Link to={resident}>{resident}</Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  planet.films.forEach(film => {\r\n    filmsPresent.push(\r\n      <li>\r\n        <Link to={film}>{film}</Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>{planet.name}</h2>\r\n      <span><b>Rotation Period: </b>{planet.rotation_period}</span> <br />\r\n      <span><b>Orbital Period: </b>{planet.orbital_period}</span> <br />\r\n      <span><b>Diameter: </b>{planet.diameter}</span> <br />\r\n      <span><b>Climate: </b>{planet.climate}</span> <br />\r\n      <span><b>Gravity: </b>{planet.gravity}</span> <br />\r\n      <span><b>Terrain: </b>{planet.terrain}</span> <br />\r\n      <span><b>Surface Water: </b>{planet.surface_water}</span> <br />\r\n      <span><b>Population: </b>{planet.population}</span> <br />\r\n      <b>Residents: </b>\r\n      <ul>\r\n        {planetResidents}\r\n      </ul>\r\n      <b>Films: </b>\r\n      <ul>\r\n        {filmsPresent}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction Films() {\r\n  const { url, path } = useRouteMatch();\r\n  const filmLinks = [];\r\n  const filmRoutesMatcher = [];\r\n\r\n  for (var film of Object.keys(FilmsData)) {\r\n    filmLinks.push(\r\n      <li key={film}>\r\n        <NavLink to={FilmsData[film].url}>{FilmsData[film].title}</NavLink>\r\n      </li>\r\n    )\r\n\r\n    filmRoutesMatcher.push(\r\n      <Route path={FilmsData[film].url}>\r\n        <Film info={FilmsData[film]} />\r\n      </Route>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"sidenav\">\r\n        <ul>\r\n          {filmLinks}\r\n        </ul>\r\n      </div>\r\n      <div class=\"main\">\r\n        <Switch>\r\n          {\r\n            [\r\n              ...filmRoutesMatcher,\r\n              <Route exact path={url}>\r\n                <p>Select a film from the side navigation to learn about its details.</p>\r\n              </Route>,\r\n              <Route path=\"*\">\r\n                <div>\r\n                  404 - Page Not Found\r\n                </div>\r\n              </Route>\r\n            ]\r\n          }\r\n        </Switch>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction Film(props) {\r\n  const film = props.info;\r\n  const people = [];\r\n  const planets = [];\r\n\r\n  film.characters.forEach(character => {\r\n    people.push(\r\n      <li>\r\n        <Link to={character}>{character}</Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  film.planets.forEach(planet => {\r\n    planets.push(\r\n      <li>\r\n        <Link to={planet}>{planet}</Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>{film.title}</h2>\r\n      <span><b>Episode ID: </b>{film.episode_id}</span> <br />\r\n      <span><b>Opening Crawl: </b>{film.opening_crawl}</span> <br />\r\n      <span><b>Director: </b>{film.director}</span> <br />\r\n      <span><b>Producer: </b>{film.producer}</span> <br />\r\n      <span><b>Release Date: </b>{film.release_date}</span> <br />\r\n      <b>Characters: </b>\r\n      <ul>\r\n        {people}\r\n      </ul>\r\n      <b>Planets: </b>\r\n      <ul>\r\n        {planets}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    [\r\n      <header>\r\n        <h1><Link exact to=\"/\">Star Wars</Link></h1>\r\n        <nav id=\"main-nav\">\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/people\">People</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/planets\">Planets</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/films\">Films</NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>,\r\n      <Switch>\r\n        <Route path=\"/people\">\r\n          <People />\r\n        </Route>\r\n        <Route path=\"/planets\">\r\n          <Planets />\r\n        </Route>\r\n        <Route path=\"/films\">\r\n          <Films />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <div>404</div>\r\n        </Route>\r\n      </Switch>\r\n    ]\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}